{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amuly\\\\OneDrive\\\\Desktop\\\\college\\\\frontend\\\\src\\\\components\\\\company\\\\PostJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostJobs = () => {\n  _s();\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [error, setError] = useState('');\n  const handlePostJob = () => {\n    if (!jobTitle || !jobDescription) {\n      setError('Please fill in both the job title and description.');\n      return;\n    }\n\n    // Simulate posting a job\n    console.log(`Job posted: ${jobTitle}, ${jobDescription}`);\n    setError('');\n    setJobTitle('');\n    setJobDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: jobTitle,\n      onChange: e => setJobTitle(e.target.value),\n      placeholder: \"Job Title\",\n      className: \"mb-4 p-2 w-full border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: jobDescription,\n      onChange: e => setJobDescription(e.target.value),\n      placeholder: \"Job Description\",\n      className: \"mb-4 p-2 w-full border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePostJob,\n      className: \"bg-green-600 text-white p-2 rounded w-full\",\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PostJobs, \"uMC3YpVma1fQxkYWS71luSYBbkw=\");\n_c = PostJobs;\nexport default PostJobs;\nvar _c;\n$RefreshReg$(_c, \"PostJobs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostJobs","_s","jobTitle","setJobTitle","jobDescription","setJobDescription","error","setError","handlePostJob","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amuly/OneDrive/Desktop/college/frontend/src/components/company/PostJobs.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst PostJobs = () => {\n  const [jobTitle, setJobTitle] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  const [error, setError] = useState('');\n\n  const handlePostJob = () => {\n    if (!jobTitle || !jobDescription) {\n      setError('Please fill in both the job title and description.');\n      return;\n    }\n\n    // Simulate posting a job\n    console.log(`Job posted: ${jobTitle}, ${jobDescription}`);\n    setError('');\n    setJobTitle('');\n    setJobDescription('');\n  };\n\n  return (\n    <div className=\"p-4 max-w-lg mx-auto\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Post Job</h2>\n      \n      {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n\n      <input \n        type=\"text\" \n        value={jobTitle} \n        onChange={(e) => setJobTitle(e.target.value)} \n        placeholder=\"Job Title\" \n        className=\"mb-4 p-2 w-full border border-gray-300 rounded\"\n      />\n      \n      <textarea \n        value={jobDescription} \n        onChange={(e) => setJobDescription(e.target.value)} \n        placeholder=\"Job Description\" \n        className=\"mb-4 p-2 w-full border border-gray-300 rounded\"\n      />\n\n      <button \n        onClick={handlePostJob} \n        className=\"bg-green-600 text-white p-2 rounded w-full\"\n      >\n        Post Job\n      </button>\n    </div>\n  );\n};\n\nexport default PostJobs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACN,QAAQ,IAAI,CAACE,cAAc,EAAE;MAChCG,QAAQ,CAAC,oDAAoD,CAAC;MAC9D;IACF;;IAEA;IACAE,OAAO,CAACC,GAAG,CAAC,eAAeR,QAAQ,KAAKE,cAAc,EAAE,CAAC;IACzDG,QAAQ,CAAC,EAAE,CAAC;IACZJ,WAAW,CAAC,EAAE,CAAC;IACfE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCb,OAAA;MAAIY,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExDV,KAAK,iBAAIP,OAAA;MAAGY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtDjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,WAAW;MACvBX,SAAS,EAAC;IAAgD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAEFjB,OAAA;MACEmB,KAAK,EAAEd,cAAe;MACtBe,QAAQ,EAAGC,CAAC,IAAKf,iBAAiB,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACnDI,WAAW,EAAC,iBAAiB;MAC7BX,SAAS,EAAC;IAAgD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAEFjB,OAAA;MACEwB,OAAO,EAAEf,aAAc;MACvBG,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACvD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CA/CID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}