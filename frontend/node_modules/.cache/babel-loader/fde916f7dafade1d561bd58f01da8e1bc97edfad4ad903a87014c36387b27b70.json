{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amuly\\\\OneDrive\\\\Desktop\\\\college - Copy\\\\frontend\\\\src\\\\components\\\\student\\\\ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/ResumeUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeUpload = () => {\n  _s();\n  const [resume, setResume] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const handleFileChange = e => {\n    setResume(e.target.files[0]);\n    setMessage('');\n    setIsError(false);\n  };\n  const handleUpload = async () => {\n    if (!resume) {\n      setMessage('Please select a resume file to upload.');\n      setIsError(true);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('resume', resume);\n    try {\n      const response = await fetch('http://localhost:5000/api/student/upload-resume', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n        setIsError(false);\n        setResume(null);\n      } else {\n        setMessage(data.message || 'Upload failed');\n        setIsError(true);\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('Server error during upload');\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resume-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"resume-title\",\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isError ? 'message error' : 'message success',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.doc,.docx\",\n      onChange: handleFileChange,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"upload-button\",\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeUpload, \"v6L3Mds586YDdyKPuhKtb01R3PM=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResumeUpload","_s","resume","setResume","message","setMessage","isError","setIsError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","headers","Authorization","localStorage","getItem","body","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amuly/OneDrive/Desktop/college - Copy/frontend/src/components/student/ResumeUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../styles/ResumeUpload.css';\r\n\r\nconst ResumeUpload = () => {\r\n  const [resume, setResume] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setResume(e.target.files[0]);\r\n    setMessage('');\r\n    setIsError(false);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!resume) {\r\n      setMessage('Please select a resume file to upload.');\r\n      setIsError(true);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('resume', resume);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/student/upload-resume', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.message);\r\n        setIsError(false);\r\n        setResume(null);\r\n      } else {\r\n        setMessage(data.message || 'Upload failed');\r\n        setIsError(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Server error during upload');\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resume-upload-container\">\r\n      <h2 className=\"resume-title\">Upload Your Resume</h2>\r\n\r\n      {message && (\r\n        <div className={isError ? 'message error' : 'message success'}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf,.doc,.docx\"\r\n        onChange={handleFileChange}\r\n        className=\"file-input\"\r\n      />\r\n\r\n      <button onClick={handleUpload} className=\"upload-button\">\r\n        Upload Resume\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}