{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amuly\\\\OneDrive\\\\Desktop\\\\college\\\\frontend\\\\src\\\\components\\\\admin\\\\ShortlistStudents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShortlistStudents = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    name: 'John Doe',\n    course: 'Computer Science',\n    shortlisted: false\n  }, {\n    name: 'Jane Smith',\n    course: 'Mechanical Engineering',\n    shortlisted: false\n  }\n  // Simulate other students\n  ]);\n  const handleShortlist = index => {\n    const updatedStudents = [...students];\n    updatedStudents[index].shortlisted = !updatedStudents[index].shortlisted;\n    setStudents(updatedStudents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Shortlist Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), students.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-4 mb-2 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course: \", student.course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShortlist(index),\n        className: `p-2 rounded ${student.shortlisted ? 'bg-green-600' : 'bg-gray-600'} text-white`,\n        children: student.shortlisted ? 'Unshortlist' : 'Shortlist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ShortlistStudents, \"5QkG6RZJve31JPPj8tTDbQHNeSE=\");\n_c = ShortlistStudents;\nexport default ShortlistStudents;\nvar _c;\n$RefreshReg$(_c, \"ShortlistStudents\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ShortlistStudents","_s","students","setStudents","name","course","shortlisted","handleShortlist","index","updatedStudents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amuly/OneDrive/Desktop/college/frontend/src/components/admin/ShortlistStudents.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ShortlistStudents = () => {\n  const [students, setStudents] = useState([\n    { name: 'John Doe', course: 'Computer Science', shortlisted: false },\n    { name: 'Jane Smith', course: 'Mechanical Engineering', shortlisted: false },\n    // Simulate other students\n  ]);\n\n  const handleShortlist = (index) => {\n    const updatedStudents = [...students];\n    updatedStudents[index].shortlisted = !updatedStudents[index].shortlisted;\n    setStudents(updatedStudents);\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-2xl mb-4\">Shortlist Students</h2>\n      {students.map((student, index) => (\n        <div key={index} className=\"bg-gray-100 p-4 mb-2 rounded\">\n          <h3 className=\"font-semibold\">{student.name}</h3>\n          <p>Course: {student.course}</p>\n          <button\n            onClick={() => handleShortlist(index)}\n            className={`p-2 rounded ${student.shortlisted ? 'bg-green-600' : 'bg-gray-600'} text-white`}\n          >\n            {student.shortlisted ? 'Unshortlist' : 'Shortlist'}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShortlistStudents;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACvC;IAAEO,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE,kBAAkB;IAAEC,WAAW,EAAE;EAAM,CAAC,EACpE;IAAEF,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,wBAAwB;IAAEC,WAAW,EAAE;EAAM;EAC3E;EAAA,CACD,CAAC;EAEF,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,eAAe,GAAG,CAAC,GAAGP,QAAQ,CAAC;IACrCO,eAAe,CAACD,KAAK,CAAC,CAACF,WAAW,GAAG,CAACG,eAAe,CAACD,KAAK,CAAC,CAACF,WAAW;IACxEH,WAAW,CAACM,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAIW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAET,KAAK,kBAC3BT,OAAA;MAAiBW,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBACvDZ,OAAA;QAAIW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEM,OAAO,CAACb;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDhB,OAAA;QAAAY,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACZ,MAAM;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BhB,OAAA;QACEmB,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACC,KAAK,CAAE;QACtCE,SAAS,EAAE,eAAeO,OAAO,CAACX,WAAW,GAAG,cAAc,GAAG,aAAa,aAAc;QAAAK,QAAA,EAE3FM,OAAO,CAACX,WAAW,GAAG,aAAa,GAAG;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA,GARDP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AAgCvB,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}